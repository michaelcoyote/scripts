#!/usr/bin/python
#
#  URL/URI syntax in markdown is the dumbest
#  crap ever and I'm even dumber for forgetting
#  every time I have to use the dumb thing.
#  This script will turn a url into markdown
#  The idea here is I'd like to turn this into
#  part of a linkdump/notetaking system

import sys
import argparse

outfile = False
#
# put the markdown link in the right place
def linkout(title,url):
    if outfile:
        outfile.write('[{0}]({1})\n'.format(title,url))
        #print '[link: {0} ]({1})'.format(title,url)
    else:
        print '[link: {0} ]({1})\n'.format(title,url)
#
# lookup module
def lookup(url_lu):
    import urllib2
    from BeautifulSoup import BeautifulSoup
    htd = BeautifulSoup(urllib2.urlopen(url_lu))
    title_out = htd.title.string
    return title_out

# Set up the command arg parser
args = argparse.ArgumentParser()
# args
args.add_argument('-f', action='store',default=False, dest='outfile', help='output file')
args.add_argument('-l', action='store', dest='url_in', help='Save URL as link')
args.add_argument('-L', action='store', dest='url_in_lu', help='Save URL as link and lookup title')
# args.add_argument('-t', action='store', dest='link_title', help='link title')
#
arg = args.parse_args()

if arg.outfile:
  outfile = open(arg.outfile, "a")

# collect the URL/URI from the command line

if arg.url_in_lu:
    linkout(lookup(arg.url_in_lu), arg.url_in_lu)
    #pass
else:
    linkout(' title:'+arg.url_in+' ',arg.url_in)

if arg.outfile:
  outfile.close()


